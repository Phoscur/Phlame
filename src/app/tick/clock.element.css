@property --seconds {
  syntax: '<integer>';
  initial-value: 0;
  inherits: false;
}
@property --minutes {
  syntax: '<integer>';
  initial-value: 0;
  inherits: false;
}
@property --hours {
  syntax: '<integer>';
  initial-value: 0;
  inherits: false;
}

.clock {
  all: unset;
  display: grid;
  font-size: 2em;
  font-variant-numeric: tabular-nums;
  grid-auto-flow: column;
  inline-size: min-content;
  padding: 1ch;

  & li {
    list-style: none;
    &:nth-of-type(1) {
      animation: hours 86400s steps(24, end) infinite;
      animation-delay: var(--delay-hours, 0s);
      counter-reset: hours var(--hours);
      &::after {
        content: counter(hours, decimal-leading-zero) ' ';
      }
    }
    &:nth-of-type(2) {
      animation: minutes 3600s steps(60, end) infinite;
      animation-delay: var(--delay-minutes, 0s);
      counter-reset: minutes var(--minutes);
      &::before {
        content: ':';
      }
      &::after {
        content: counter(minutes, decimal-leading-zero) ' ';
      }
    }
    &:nth-of-type(3) {
      animation: seconds 60s steps(60, end) infinite;
      animation-delay: var(--delay-seconds, 0s);
      counter-reset: seconds var(--seconds);
      &::before {
        content: ':';
      }
      &::after {
        content: counter(seconds, decimal-leading-zero) ' ';
      }
    }
  }
}

@keyframes hours {
  from {
    --hours: 0;
  }
  to {
    --hours: 24;
  }
}
@keyframes minutes {
  from {
    --minutes: 0;
  }
  to {
    --minutes: 60;
  }
}
@keyframes seconds {
  from {
    --seconds: 0;
  }
  to {
    --seconds: 60;
  }
}
